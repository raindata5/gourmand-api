name: learn-github-actions

on: [push]

jobs:
  push-and-test:
    environment:
      name: production
    env:
      pg_oltp_api_db_test: ${{secrets.pg_oltp_api_db_test}}
      pg_oltp_api_user: ${{secrets.pg_oltp_api_user}}
      pg_oltp_api_password: ${{secrets.pg_oltp_api_password}}
      pg_oltp_api_host: ${{secrets.pg_oltp_api_host}}
      pg_oltp_api_port: ${{secrets.pg_oltp_api_port}}
      pg_oltp_api_db: ${{secrets.pg_oltp_api_db}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
    services: 
      postgres:
        image: postgres
        env: 
          POSTGRES_PASSWORD: ${{secrets.pg_oltp_api_password}}
          POSTGRES_DB: ${{secrets.pg_oltp_api_db_test}}
        ports:
        - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
        - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8.10'
      - name : update pip
        run: python -m pip install --upgrade pip
      - name: dependencies
        run: pip install -r requirements.txt
      - name: pytests
        run: |
          pip install pytest
          pytest 
      #optional docker config
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1
      # - name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     builder: ${{ steps.buildx.outputs.name }}
      #     push: true
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/gourmand-api:latest
      #     cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/gourmand-api:buildcache
      #     cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/gourmand-api:buildcache,mode=max
  deployment:
    runs-on: ubuntu-latest
    needs: [push-and-test]
    steps:
      - name: deploying to ubuntu vm
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.pg_oltp_api_host}}
          user: ${{secrets.ubuntu_user}}
          password: ${{ secrets.UBUNTU_CONTRIBUTOR_PASS }}
          # passphrase : ${{secrets.UBUNTU_PASSPHRASE}}
        script: |
          cd gourmand-api/
          git pull
          echo ${{secrets.UBUNTU_CONTRIBUTOR_PASS}} | sudo -S systemctl restart gourmandapi.service 
